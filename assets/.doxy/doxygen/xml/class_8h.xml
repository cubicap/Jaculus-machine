<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="class_8h" kind="file" language="C++">
    <compoundname>class.h</compoundname>
    <includes local="no">quickjs.h</includes>
    <includes local="no">string</includes>
    <includes local="no">tuple</includes>
    <includes local="no">vector</includes>
    <includes refid="funcUtil_8h" local="yes">funcUtil.h</includes>
    <includes refid="values_8h" local="yes">values.h</includes>
    <includedby refid="basicStreamFeature_8h" local="no">src/jac/features/basicStreamFeature.h</includedby>
    <includedby refid="filesystemFeature_8h" local="no">src/jac/features/filesystemFeature.h</includedby>
    <includedby refid="functionFactory_8h" local="yes">src/jac/machine/functionFactory.h</includedby>
    <incdepgraph>
      <node id="10">
        <label>atom.h</label>
        <link refid="atom_8h_source"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>src/jac/machine/class.h</label>
        <link refid="class_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>context.h</label>
        <link refid="context_8h_source"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>funcUtil.h</label>
        <link refid="funcUtil_8h_source"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>internal/declarations.h</label>
        <link refid="declarations_8h_source"/>
      </node>
      <node id="14">
        <label>stringView.h</label>
        <link refid="stringView_8h_source"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>traits.h</label>
        <link refid="traits_8h_source"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>values.h</label>
        <link refid="values_8h_source"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>exception</label>
      </node>
      <node id="11">
        <label>ostream</label>
      </node>
      <node id="2">
        <label>quickjs.h</label>
      </node>
      <node id="9">
        <label>span</label>
      </node>
      <node id="3">
        <label>string</label>
      </node>
      <node id="15">
        <label>string_view</label>
      </node>
      <node id="4">
        <label>tuple</label>
      </node>
      <node id="17">
        <label>type_traits</label>
      </node>
      <node id="5">
        <label>vector</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>src/jac/features/basicStreamFeature.h</label>
        <link refid="basicStreamFeature_8h_source"/>
      </node>
      <node id="5">
        <label>src/jac/features/eventLoopFeature.h</label>
        <link refid="eventLoopFeature_8h_source"/>
      </node>
      <node id="3">
        <label>src/jac/features/filesystemFeature.h</label>
        <link refid="filesystemFeature_8h_source"/>
      </node>
      <node id="6">
        <label>src/jac/features/stdioFeature.h</label>
        <link refid="stdioFeature_8h_source"/>
      </node>
      <node id="7">
        <label>src/jac/features/timersFeature.h</label>
        <link refid="timersFeature_8h_source"/>
      </node>
      <node id="1">
        <label>src/jac/machine/class.h</label>
        <link refid="class_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>src/jac/machine/functionFactory.h</label>
        <link refid="functionFactory_8h_source"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structjac_1_1SgnUnwrap_3_01Res_07Args_8_8_8_08_4" prot="public">jac::SgnUnwrap&lt; Res(Args...)&gt;</innerclass>
    <innerclass refid="structjac_1_1detail_1_1is__base__of__template__impl" prot="public">jac::detail::is_base_of_template_impl</innerclass>
    <innerclass refid="structjac_1_1detail_1_1is__base__of__template__impl_1_1check" prot="public">jac::detail::is_base_of_template_impl::check</innerclass>
    <innerclass refid="structjac_1_1detail_1_1is__base__of__template__impl_1_1check_3_01A_00_01std_1_1void__t_3_01A_3_01Derived_01_4_01_4_01_4" prot="public">jac::detail::is_base_of_template_impl::check&lt; A, std::void_t&lt; A&lt; Derived &gt; &gt; &gt;</innerclass>
    <innerclass refid="structjac_1_1is__base__of__template" prot="public">jac::is_base_of_template</innerclass>
    <innerclass refid="structjac_1_1ProtoBuilder_1_1Opaque" prot="public">jac::ProtoBuilder::Opaque</innerclass>
    <innerclass refid="structjac_1_1ProtoBuilder_1_1LifetimeHandles" prot="public">jac::ProtoBuilder::LifetimeHandles</innerclass>
    <innerclass refid="structjac_1_1ProtoBuilder_1_1Callable" prot="public">jac::ProtoBuilder::Callable</innerclass>
    <innerclass refid="structjac_1_1ProtoBuilder_1_1Properties" prot="public">jac::ProtoBuilder::Properties</innerclass>
    <innerclass refid="classjac_1_1Class" prot="public">jac::Class</innerclass>
    <innernamespace refid="namespacejac">jac</innernamespace>
    <innernamespace refid="namespacejac_1_1detail">jac::detail</innernamespace>
    <innernamespace refid="namespacejac_1_1ProtoBuilder">jac::ProtoBuilder</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;quickjs.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;tuple&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;funcUtil.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;values.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">jac<sp/>{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Sgn&gt;</highlight></codeline>
<codeline lineno="17" refid="structjac_1_1SgnUnwrap" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structjac_1_1SgnUnwrap" kindref="compound">SgnUnwrap</ref>;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Res,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Args&gt;</highlight></codeline>
<codeline lineno="20" refid="structjac_1_1SgnUnwrap_3_01Res_07Args_8_8_8_08_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structjac_1_1SgnUnwrap" kindref="compound">SgnUnwrap</ref>&lt;Res(Args...)&gt;<sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">ResType<sp/>=<sp/>Res;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">ArgTypes<sp/>=<sp/>std::tuple&lt;Args...&gt;;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Class&gt;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structjac_1_1SgnUnwrap" kindref="compound">SgnUnwrap</ref>(Res<sp/>(<ref refid="classjac_1_1Class" kindref="compound">Class</ref>::*)(Args...))<sp/>{}</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Class&gt;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structjac_1_1SgnUnwrap" kindref="compound">SgnUnwrap</ref>(Res<sp/>(<ref refid="classjac_1_1Class" kindref="compound">Class</ref>::*)(Args...)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">)<sp/>{}</highlight></codeline>
<codeline lineno="28"><highlight class="normal">};</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classjac_1_1Class" kindref="compound">Class</ref>,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Res,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Args&gt;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><ref refid="structjac_1_1SgnUnwrap" kindref="compound">SgnUnwrap</ref>(Res<sp/>(<ref refid="classjac_1_1Class" kindref="compound">Class</ref>::*)(Args...))<sp/>-&gt;<sp/><ref refid="structjac_1_1SgnUnwrap" kindref="compound">SgnUnwrap</ref>&lt;Res(Args...)&gt;;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classjac_1_1Class" kindref="compound">Class</ref>,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Res,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Args&gt;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><ref refid="structjac_1_1SgnUnwrap" kindref="compound">SgnUnwrap</ref>(Res<sp/>(<ref refid="classjac_1_1Class" kindref="compound">Class</ref>::*)(Args...)<sp/>const)<sp/>-&gt;<sp/><ref refid="structjac_1_1SgnUnwrap" kindref="compound">SgnUnwrap</ref>&lt;Res(Args...)&gt;;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">detail<sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">...&gt;<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Base,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Derived&gt;</highlight></codeline>
<codeline lineno="36" refid="structjac_1_1detail_1_1is__base__of__template__impl" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structjac_1_1detail_1_1is__base__of__template__impl" kindref="compound">is_base_of_template_impl</ref><sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Ts&gt;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>is_callable(Base&lt;Ts...&gt;*);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">is_callable_t<sp/>=<sp/></highlight><highlight class="keyword">decltype</highlight><highlight class="normal">(is_callable(std::declval&lt;T*&gt;()));</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal">...&gt;<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">A,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Void<sp/>=<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="44" refid="structjac_1_1detail_1_1is__base__of__template__impl_1_1check" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structjac_1_1detail_1_1is__base__of__template__impl_1_1check" kindref="compound">check</ref><sp/>:<sp/>std::false_type<sp/>{};</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal">...&gt;<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">A&gt;</highlight></codeline>
<codeline lineno="47" refid="structjac_1_1detail_1_1is__base__of__template__impl_1_1check_3_01A_00_01std_1_1void__t_3_01A_3_01Derived_01_4_01_4_01_4" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structjac_1_1detail_1_1is__base__of__template__impl_1_1check" kindref="compound">check</ref>&lt;A,<sp/>std::void_t&lt;A&lt;Derived&gt;&gt;&gt;<sp/>:<sp/>std::true_type<sp/>{};</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="structjac_1_1detail_1_1is__base__of__template__impl_1_1check" kindref="compound">value_t</ref><sp/>=<sp/><ref refid="structjac_1_1detail_1_1is__base__of__template__impl_1_1check" kindref="compound">check&lt;is_callable_t&gt;</ref>;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="51"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>detail</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">...&gt;<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Base,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Derived&gt;</highlight></codeline>
<codeline lineno="60" refid="structjac_1_1is__base__of__template" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structjac_1_1is__base__of__template" kindref="compound">is_base_of_template</ref><sp/>:<sp/><ref refid="structjac_1_1detail_1_1is__base__of__template__impl" kindref="compound">detail::is_base_of_template_impl</ref>&lt;Base,<sp/>Derived&gt;::value_t<sp/>{};</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">...&gt;<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Base,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Derived&gt;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">is_base_of_template_t<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structjac_1_1is__base__of__template" kindref="compound">is_base_of_template&lt;Base, Derived&gt;::type</ref>;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">...&gt;<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Base,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Derived&gt;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_base_of_template_v<sp/>=<sp/><ref refid="structjac_1_1is__base__of__template" kindref="compound">is_base_of_template&lt;Base, Derived&gt;::value</ref>;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">ProtoBuilder<sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="80" refid="structjac_1_1ProtoBuilder_1_1Opaque" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structjac_1_1ProtoBuilder_1_1Opaque" kindref="compound">Opaque</ref><sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">OpaqueType<sp/>=<sp/><ref refid="structjac_1_1ProtoBuilder_1_1Opaque_1af744421fc942a2fa181902b98db4f40d" kindref="member">T</ref>;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structjac_1_1ProtoBuilder_1_1Opaque_1af744421fc942a2fa181902b98db4f40d" kindref="member">JSClassID</ref><sp/>classId;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="92" refid="structjac_1_1ProtoBuilder_1_1Opaque_1a11508965321d887cbd6bf4f7b77cdcbe" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structjac_1_1ProtoBuilder_1_1Opaque_1af744421fc942a2fa181902b98db4f40d" kindref="member">T</ref>*<sp/><ref refid="structjac_1_1ProtoBuilder_1_1Opaque_1a11508965321d887cbd6bf4f7b77cdcbe" kindref="member">constructOpaque</ref>(<ref refid="classjac_1_1ContextRef" kindref="compound">ContextRef</ref><sp/></highlight><highlight class="comment">/*ctx*/</highlight><highlight class="normal">,<sp/>std::vector&lt;ValueWeak&gt;<sp/></highlight><highlight class="comment">/*args*/</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classjac_1_1ExceptionWrapper_1a89451ac6500984a18ce527a5c39b0c21" kindref="member">Exception::create</ref>(Exception::Type::TypeError,<sp/></highlight><highlight class="stringliteral">&quot;Class<sp/>cannot<sp/>be<sp/>instantiated&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="103" refid="structjac_1_1ProtoBuilder_1_1Opaque_1a0f840b0f74a74e1a8acb118c03748a89" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structjac_1_1ProtoBuilder_1_1Opaque_1a0f840b0f74a74e1a8acb118c03748a89" kindref="member">destroyOpaque</ref>(<ref refid="structjac_1_1ProtoBuilder_1_1Opaque_1af744421fc942a2fa181902b98db4f40d" kindref="member">JSRuntime</ref>*<sp/></highlight><highlight class="comment">/*rt*/</highlight><highlight class="normal">,<sp/><ref refid="structjac_1_1ProtoBuilder_1_1Opaque_1af744421fc942a2fa181902b98db4f40d" kindref="member">T</ref>*<sp/><ref refid="structjac_1_1ProtoBuilder_1_1Opaque_1af744421fc942a2fa181902b98db4f40d" kindref="member">ptr</ref>)<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="structjac_1_1ProtoBuilder_1_1Opaque_1af744421fc942a2fa181902b98db4f40d" kindref="member">ptr</ref>;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="114" refid="structjac_1_1ProtoBuilder_1_1Opaque_1ab5c6bc72d3296cda5415ab93386814ba" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structjac_1_1ProtoBuilder_1_1Opaque_1af744421fc942a2fa181902b98db4f40d" kindref="member">T</ref>*<sp/><ref refid="structjac_1_1ProtoBuilder_1_1Opaque_1ab5c6bc72d3296cda5415ab93386814ba" kindref="member">getOpaque</ref>(<ref refid="classjac_1_1ContextRef" kindref="compound">ContextRef</ref><sp/></highlight><highlight class="comment">/*ctx*/</highlight><highlight class="normal">,<sp/><ref refid="classjac_1_1ValueWrapper" kindref="compound">ValueWeak</ref><sp/><ref refid="structjac_1_1ProtoBuilder_1_1Opaque_1af744421fc942a2fa181902b98db4f40d" kindref="member">thisVal</ref>)<sp/>{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structjac_1_1ProtoBuilder_1_1Opaque_1af744421fc942a2fa181902b98db4f40d" kindref="member">T</ref>*<sp/><ref refid="structjac_1_1ProtoBuilder_1_1Opaque_1af744421fc942a2fa181902b98db4f40d" kindref="member">ptr</ref><sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="structjac_1_1ProtoBuilder_1_1Opaque_1af744421fc942a2fa181902b98db4f40d" kindref="member">T</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="structjac_1_1ProtoBuilder_1_1Opaque_1af744421fc942a2fa181902b98db4f40d" kindref="member">JS_GetOpaque</ref>(<ref refid="structjac_1_1ProtoBuilder_1_1Opaque_1af744421fc942a2fa181902b98db4f40d" kindref="member">thisVal</ref>.getVal(),<sp/>classId));</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="structjac_1_1ProtoBuilder_1_1Opaque_1af744421fc942a2fa181902b98db4f40d" kindref="member">ptr</ref>)<sp/>{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classjac_1_1ExceptionWrapper_1a89451ac6500984a18ce527a5c39b0c21" kindref="member">Exception::create</ref>(Exception::Type::TypeError,<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>opaque<sp/>data&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structjac_1_1ProtoBuilder_1_1Opaque_1af744421fc942a2fa181902b98db4f40d" kindref="member">ptr</ref>;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Sgn,<sp/>Sgn<sp/>member&gt;</highlight></codeline>
<codeline lineno="135" refid="structjac_1_1ProtoBuilder_1_1Opaque_1a1af91b1b161bda29afa14f3c59fbe049" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classjac_1_1ValueWrapper" kindref="compound">Value</ref><sp/><ref refid="structjac_1_1ProtoBuilder_1_1Opaque_1a1af91b1b161bda29afa14f3c59fbe049" kindref="member">callMember</ref>(<ref refid="classjac_1_1ContextRef" kindref="compound">ContextRef</ref><sp/><ref refid="structjac_1_1ProtoBuilder_1_1Opaque_1af744421fc942a2fa181902b98db4f40d" kindref="member">ctx</ref>,<sp/><ref refid="classjac_1_1ValueWrapper" kindref="compound">ValueWeak</ref><sp/><ref refid="structjac_1_1ProtoBuilder_1_1Opaque_1af744421fc942a2fa181902b98db4f40d" kindref="member">funcObj</ref>,<sp/><ref refid="classjac_1_1ValueWrapper" kindref="compound">ValueWeak</ref><sp/><ref refid="structjac_1_1ProtoBuilder_1_1Opaque_1af744421fc942a2fa181902b98db4f40d" kindref="member">thisVal</ref>,<sp/>std::vector&lt;ValueWeak&gt;<sp/><ref refid="structjac_1_1ProtoBuilder_1_1Opaque_1af744421fc942a2fa181902b98db4f40d" kindref="member">argv</ref>)<sp/>{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structjac_1_1SgnUnwrap" kindref="compound">SgnUnwrap</ref><sp/><ref refid="structjac_1_1ProtoBuilder_1_1Opaque_1af744421fc942a2fa181902b98db4f40d" kindref="member">Unwrap_</ref>(<ref refid="structjac_1_1ProtoBuilder_1_1Opaque_1af744421fc942a2fa181902b98db4f40d" kindref="member">member</ref>);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>[&amp;]&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structjac_1_1ProtoBuilder_1_1Opaque_1af744421fc942a2fa181902b98db4f40d" kindref="member">Res</ref>,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/><ref refid="structjac_1_1ProtoBuilder_1_1Opaque_1af744421fc942a2fa181902b98db4f40d" kindref="member">Args</ref>&gt;(<ref refid="structjac_1_1SgnUnwrap" kindref="compound">SgnUnwrap</ref>&lt;<ref refid="structjac_1_1ProtoBuilder_1_1Opaque_1af744421fc942a2fa181902b98db4f40d" kindref="member">Res</ref>(<ref refid="structjac_1_1ProtoBuilder_1_1Opaque_1af744421fc942a2fa181902b98db4f40d" kindref="member">Args</ref>...)&gt;)<sp/>{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="structjac_1_1ProtoBuilder_1_1Opaque_1af744421fc942a2fa181902b98db4f40d" kindref="member">f</ref><sp/>=<sp/>[&amp;](<ref refid="structjac_1_1ProtoBuilder_1_1Opaque_1af744421fc942a2fa181902b98db4f40d" kindref="member">Args</ref>...<sp/><ref refid="structjac_1_1ProtoBuilder_1_1Opaque_1af744421fc942a2fa181902b98db4f40d" kindref="member">args</ref>)<sp/>-&gt;<sp/><ref refid="structjac_1_1ProtoBuilder_1_1Opaque_1af744421fc942a2fa181902b98db4f40d" kindref="member">Res</ref><sp/>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structjac_1_1ProtoBuilder_1_1Opaque_1af744421fc942a2fa181902b98db4f40d" kindref="member">T</ref>*<sp/><ref refid="structjac_1_1ProtoBuilder_1_1Opaque_1af744421fc942a2fa181902b98db4f40d" kindref="member">ptr</ref><sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="structjac_1_1ProtoBuilder_1_1Opaque_1af744421fc942a2fa181902b98db4f40d" kindref="member">T</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="structjac_1_1ProtoBuilder_1_1Opaque_1af744421fc942a2fa181902b98db4f40d" kindref="member">JS_GetOpaque</ref>(<ref refid="structjac_1_1ProtoBuilder_1_1Opaque_1af744421fc942a2fa181902b98db4f40d" kindref="member">funcObj</ref>.getVal(),<sp/>classId));</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="structjac_1_1ProtoBuilder_1_1Opaque_1af744421fc942a2fa181902b98db4f40d" kindref="member">ptr</ref>-&gt;*<ref refid="structjac_1_1ProtoBuilder_1_1Opaque_1af744421fc942a2fa181902b98db4f40d" kindref="member">member</ref>)(<ref refid="structjac_1_1ProtoBuilder_1_1Opaque_1af744421fc942a2fa181902b98db4f40d" kindref="member">args</ref>...);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>processCall&lt;</highlight><highlight class="keyword">decltype</highlight><highlight class="normal">(<ref refid="structjac_1_1ProtoBuilder_1_1Opaque_1af744421fc942a2fa181902b98db4f40d" kindref="member">f</ref>),<sp/><ref refid="structjac_1_1ProtoBuilder_1_1Opaque_1af744421fc942a2fa181902b98db4f40d" kindref="member">Res</ref>,<sp/><ref refid="structjac_1_1ProtoBuilder_1_1Opaque_1af744421fc942a2fa181902b98db4f40d" kindref="member">Args</ref>...&gt;(<ref refid="structjac_1_1ProtoBuilder_1_1Opaque_1af744421fc942a2fa181902b98db4f40d" kindref="member">ctx</ref>,<sp/><ref refid="structjac_1_1ProtoBuilder_1_1Opaque_1af744421fc942a2fa181902b98db4f40d" kindref="member">thisVal</ref>,<sp/><ref refid="structjac_1_1ProtoBuilder_1_1Opaque_1af744421fc942a2fa181902b98db4f40d" kindref="member">argv</ref>,<sp/><ref refid="structjac_1_1ProtoBuilder_1_1Opaque_1af744421fc942a2fa181902b98db4f40d" kindref="member">f</ref>);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}(<ref refid="structjac_1_1ProtoBuilder_1_1Opaque_1af744421fc942a2fa181902b98db4f40d" kindref="member">Unwrap_</ref>);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>U,<sp/>U(T::*member)&gt;</highlight></codeline>
<codeline lineno="160" refid="structjac_1_1ProtoBuilder_1_1Opaque_1a7681147239b72674bf17deaec8e5008e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structjac_1_1ProtoBuilder_1_1Opaque_1a7681147239b72674bf17deaec8e5008e" kindref="member">addPropMember</ref>(<ref refid="classjac_1_1ContextRef" kindref="compound">ContextRef</ref><sp/><ref refid="structjac_1_1ProtoBuilder_1_1Opaque_1af744421fc942a2fa181902b98db4f40d" kindref="member">ctx</ref>,<sp/><ref refid="classjac_1_1ObjectWrapper" kindref="compound">Object</ref><sp/><ref refid="structjac_1_1ProtoBuilder_1_1Opaque_1af744421fc942a2fa181902b98db4f40d" kindref="member">proto</ref>,<sp/>std::string<sp/><ref refid="structjac_1_1ProtoBuilder_1_1Opaque_1af744421fc942a2fa181902b98db4f40d" kindref="member">name</ref>,<sp/>PropFlags<sp/><ref refid="structjac_1_1ProtoBuilder_1_1Opaque_1af744421fc942a2fa181902b98db4f40d" kindref="member">flags</ref><sp/>=<sp/>PropFlags::Default)<sp/>{</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="structjac_1_1ProtoBuilder_1_1Opaque_1af744421fc942a2fa181902b98db4f40d" kindref="member">GetRaw</ref><sp/>=<sp/><ref refid="structjac_1_1ProtoBuilder_1_1Opaque_1af744421fc942a2fa181902b98db4f40d" kindref="member">JSValue</ref>(*)(<ref refid="structjac_1_1ProtoBuilder_1_1Opaque_1af744421fc942a2fa181902b98db4f40d" kindref="member">JSContext</ref>*<sp/><ref refid="structjac_1_1ProtoBuilder_1_1Opaque_1af744421fc942a2fa181902b98db4f40d" kindref="member">ctx_</ref>,<sp/><ref refid="structjac_1_1ProtoBuilder_1_1Opaque_1af744421fc942a2fa181902b98db4f40d" kindref="member">JSValueConst</ref><sp/><ref refid="structjac_1_1ProtoBuilder_1_1Opaque_1af744421fc942a2fa181902b98db4f40d" kindref="member">thisVal</ref>);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="structjac_1_1ProtoBuilder_1_1Opaque_1af744421fc942a2fa181902b98db4f40d" kindref="member">SetRaw</ref><sp/>=<sp/><ref refid="structjac_1_1ProtoBuilder_1_1Opaque_1af744421fc942a2fa181902b98db4f40d" kindref="member">JSValue</ref>(*)(<ref refid="structjac_1_1ProtoBuilder_1_1Opaque_1af744421fc942a2fa181902b98db4f40d" kindref="member">JSContext</ref>*<sp/><ref refid="structjac_1_1ProtoBuilder_1_1Opaque_1af744421fc942a2fa181902b98db4f40d" kindref="member">ctx_</ref>,<sp/><ref refid="structjac_1_1ProtoBuilder_1_1Opaque_1af744421fc942a2fa181902b98db4f40d" kindref="member">JSValueConst</ref><sp/><ref refid="structjac_1_1ProtoBuilder_1_1Opaque_1af744421fc942a2fa181902b98db4f40d" kindref="member">thisVal</ref>,<sp/><ref refid="structjac_1_1ProtoBuilder_1_1Opaque_1af744421fc942a2fa181902b98db4f40d" kindref="member">JSValueConst</ref><sp/><ref refid="structjac_1_1ProtoBuilder_1_1Opaque_1af744421fc942a2fa181902b98db4f40d" kindref="member">val</ref>);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structjac_1_1ProtoBuilder_1_1Opaque_1af744421fc942a2fa181902b98db4f40d" kindref="member">GetRaw</ref><sp/>get<sp/>=<sp/>[](<ref refid="structjac_1_1ProtoBuilder_1_1Opaque_1af744421fc942a2fa181902b98db4f40d" kindref="member">JSContext</ref>*<sp/><ref refid="structjac_1_1ProtoBuilder_1_1Opaque_1af744421fc942a2fa181902b98db4f40d" kindref="member">ctx_</ref>,<sp/><ref refid="structjac_1_1ProtoBuilder_1_1Opaque_1af744421fc942a2fa181902b98db4f40d" kindref="member">JSValueConst</ref><sp/><ref refid="structjac_1_1ProtoBuilder_1_1Opaque_1af744421fc942a2fa181902b98db4f40d" kindref="member">thisVal</ref>)<sp/>-&gt;<sp/><ref refid="structjac_1_1ProtoBuilder_1_1Opaque_1af744421fc942a2fa181902b98db4f40d" kindref="member">JSValue</ref><sp/>{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structjac_1_1ProtoBuilder_1_1Opaque_1af744421fc942a2fa181902b98db4f40d" kindref="member">T</ref>*<sp/><ref refid="structjac_1_1ProtoBuilder_1_1Opaque_1af744421fc942a2fa181902b98db4f40d" kindref="member">ptr</ref><sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="structjac_1_1ProtoBuilder_1_1Opaque_1af744421fc942a2fa181902b98db4f40d" kindref="member">T</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="structjac_1_1ProtoBuilder_1_1Opaque_1af744421fc942a2fa181902b98db4f40d" kindref="member">JS_GetOpaque</ref>(<ref refid="structjac_1_1ProtoBuilder_1_1Opaque_1af744421fc942a2fa181902b98db4f40d" kindref="member">thisVal</ref>,<sp/>classId));</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classjac_1_1ValueWrapper_1a74104ed70008d14bdcebb3a872cdef27" kindref="member">Value::from</ref>(<ref refid="structjac_1_1ProtoBuilder_1_1Opaque_1af744421fc942a2fa181902b98db4f40d" kindref="member">ctx_</ref>,<sp/><ref refid="structjac_1_1ProtoBuilder_1_1Opaque_1af744421fc942a2fa181902b98db4f40d" kindref="member">ptr</ref>-&gt;*<ref refid="structjac_1_1ProtoBuilder_1_1Opaque_1af744421fc942a2fa181902b98db4f40d" kindref="member">member</ref>).<ref refid="classjac_1_1ValueWrapper_1ae0b6d4f2028601bfaa53a0c12956fe21" kindref="member">loot</ref>().second;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structjac_1_1ProtoBuilder_1_1Opaque_1af744421fc942a2fa181902b98db4f40d" kindref="member">SetRaw</ref><sp/>set<sp/>=<sp/>[](<ref refid="structjac_1_1ProtoBuilder_1_1Opaque_1af744421fc942a2fa181902b98db4f40d" kindref="member">JSContext</ref>*<sp/><ref refid="structjac_1_1ProtoBuilder_1_1Opaque_1af744421fc942a2fa181902b98db4f40d" kindref="member">ctx_</ref>,<sp/><ref refid="structjac_1_1ProtoBuilder_1_1Opaque_1af744421fc942a2fa181902b98db4f40d" kindref="member">JSValueConst</ref><sp/><ref refid="structjac_1_1ProtoBuilder_1_1Opaque_1af744421fc942a2fa181902b98db4f40d" kindref="member">thisVal</ref>,<sp/><ref refid="structjac_1_1ProtoBuilder_1_1Opaque_1af744421fc942a2fa181902b98db4f40d" kindref="member">JSValueConst</ref><sp/><ref refid="structjac_1_1ProtoBuilder_1_1Opaque_1af744421fc942a2fa181902b98db4f40d" kindref="member">val</ref>)<sp/>-&gt;<sp/><ref refid="structjac_1_1ProtoBuilder_1_1Opaque_1af744421fc942a2fa181902b98db4f40d" kindref="member">JSValue</ref><sp/>{</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structjac_1_1ProtoBuilder_1_1Opaque_1af744421fc942a2fa181902b98db4f40d" kindref="member">T</ref>*<sp/><ref refid="structjac_1_1ProtoBuilder_1_1Opaque_1af744421fc942a2fa181902b98db4f40d" kindref="member">ptr</ref><sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="structjac_1_1ProtoBuilder_1_1Opaque_1af744421fc942a2fa181902b98db4f40d" kindref="member">T</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="structjac_1_1ProtoBuilder_1_1Opaque_1af744421fc942a2fa181902b98db4f40d" kindref="member">JS_GetOpaque</ref>(<ref refid="structjac_1_1ProtoBuilder_1_1Opaque_1af744421fc942a2fa181902b98db4f40d" kindref="member">thisVal</ref>,<sp/>classId));</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structjac_1_1ProtoBuilder_1_1Opaque_1af744421fc942a2fa181902b98db4f40d" kindref="member">ptr</ref>-&gt;*<ref refid="structjac_1_1ProtoBuilder_1_1Opaque_1af744421fc942a2fa181902b98db4f40d" kindref="member">member</ref><sp/>=<sp/><ref refid="classjac_1_1ValueWrapper" kindref="compound">ValueWeak</ref>(<ref refid="structjac_1_1ProtoBuilder_1_1Opaque_1af744421fc942a2fa181902b98db4f40d" kindref="member">ctx_</ref>,<sp/><ref refid="structjac_1_1ProtoBuilder_1_1Opaque_1af744421fc942a2fa181902b98db4f40d" kindref="member">val</ref>).<ref refid="classjac_1_1ValueWrapper_1a369f6e6a3f811ded8496196749a647b6" kindref="member">to</ref>&lt;<ref refid="structjac_1_1ProtoBuilder_1_1Opaque_1af744421fc942a2fa181902b98db4f40d" kindref="member">U</ref>&gt;();</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structjac_1_1ProtoBuilder_1_1Opaque_1af744421fc942a2fa181902b98db4f40d" kindref="member">JS_UNDEFINED</ref>;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structjac_1_1ProtoBuilder_1_1Opaque_1af744421fc942a2fa181902b98db4f40d" kindref="member">JSValue</ref><sp/><ref refid="structjac_1_1ProtoBuilder_1_1Opaque_1af744421fc942a2fa181902b98db4f40d" kindref="member">getter</ref><sp/>=<sp/><ref refid="structjac_1_1ProtoBuilder_1_1Opaque_1af744421fc942a2fa181902b98db4f40d" kindref="member">JS_NewCFunction2</ref>(<ref refid="structjac_1_1ProtoBuilder_1_1Opaque_1af744421fc942a2fa181902b98db4f40d" kindref="member">ctx</ref>,<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal"><ref refid="structjac_1_1ProtoBuilder_1_1Opaque_1af744421fc942a2fa181902b98db4f40d" kindref="member">JSCFunction</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(get)),<sp/>(</highlight><highlight class="stringliteral">&quot;get<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="structjac_1_1ProtoBuilder_1_1Opaque_1af744421fc942a2fa181902b98db4f40d" kindref="member">name</ref>).c_str(),<sp/>0,<sp/><ref refid="structjac_1_1ProtoBuilder_1_1Opaque_1af744421fc942a2fa181902b98db4f40d" kindref="member">JS_CFUNC_getter</ref>,<sp/>0);<sp/></highlight><highlight class="comment">//<sp/>NOLINT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structjac_1_1ProtoBuilder_1_1Opaque_1af744421fc942a2fa181902b98db4f40d" kindref="member">JSValue</ref><sp/><ref refid="structjac_1_1ProtoBuilder_1_1Opaque_1af744421fc942a2fa181902b98db4f40d" kindref="member">setter</ref><sp/>=<sp/><ref refid="structjac_1_1ProtoBuilder_1_1Opaque_1af744421fc942a2fa181902b98db4f40d" kindref="member">JS_NewCFunction2</ref>(<ref refid="structjac_1_1ProtoBuilder_1_1Opaque_1af744421fc942a2fa181902b98db4f40d" kindref="member">ctx</ref>,<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal"><ref refid="structjac_1_1ProtoBuilder_1_1Opaque_1af744421fc942a2fa181902b98db4f40d" kindref="member">JSCFunction</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(set)),<sp/>(</highlight><highlight class="stringliteral">&quot;set<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="structjac_1_1ProtoBuilder_1_1Opaque_1af744421fc942a2fa181902b98db4f40d" kindref="member">name</ref>).c_str(),<sp/>1,<sp/><ref refid="structjac_1_1ProtoBuilder_1_1Opaque_1af744421fc942a2fa181902b98db4f40d" kindref="member">JS_CFUNC_setter</ref>,<sp/>0);<sp/></highlight><highlight class="comment">//<sp/>NOLINT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classjac_1_1Atom" kindref="compound">Atom</ref><sp/><ref refid="structjac_1_1ProtoBuilder_1_1Opaque_1af744421fc942a2fa181902b98db4f40d" kindref="member">atom</ref><sp/>=<sp/><ref refid="classjac_1_1Atom" kindref="compound">Atom</ref>(<ref refid="structjac_1_1ProtoBuilder_1_1Opaque_1af744421fc942a2fa181902b98db4f40d" kindref="member">ctx</ref>,<sp/><ref refid="structjac_1_1ProtoBuilder_1_1Opaque_1af744421fc942a2fa181902b98db4f40d" kindref="member">JS_NewAtom</ref>(<ref refid="structjac_1_1ProtoBuilder_1_1Opaque_1af744421fc942a2fa181902b98db4f40d" kindref="member">ctx</ref>,<sp/><ref refid="structjac_1_1ProtoBuilder_1_1Opaque_1af744421fc942a2fa181902b98db4f40d" kindref="member">name</ref>.c_str()));</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structjac_1_1ProtoBuilder_1_1Opaque_1af744421fc942a2fa181902b98db4f40d" kindref="member">JS_DefinePropertyGetSet</ref>(<ref refid="structjac_1_1ProtoBuilder_1_1Opaque_1af744421fc942a2fa181902b98db4f40d" kindref="member">ctx</ref>,<sp/><ref refid="structjac_1_1ProtoBuilder_1_1Opaque_1af744421fc942a2fa181902b98db4f40d" kindref="member">proto</ref>.getVal(),<sp/><ref refid="structjac_1_1ProtoBuilder_1_1Opaque_1af744421fc942a2fa181902b98db4f40d" kindref="member">atom</ref>.get(),<sp/><ref refid="structjac_1_1ProtoBuilder_1_1Opaque_1af744421fc942a2fa181902b98db4f40d" kindref="member">getter</ref>,<sp/><ref refid="structjac_1_1ProtoBuilder_1_1Opaque_1af744421fc942a2fa181902b98db4f40d" kindref="member">setter</ref>,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="structjac_1_1ProtoBuilder_1_1Opaque_1af744421fc942a2fa181902b98db4f40d" kindref="member">flags</ref>));</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Sgn,<sp/>Sgn<sp/>member&gt;</highlight></codeline>
<codeline lineno="193" refid="structjac_1_1ProtoBuilder_1_1Opaque_1af744421fc942a2fa181902b98db4f40d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structjac_1_1ProtoBuilder_1_1Opaque_1af744421fc942a2fa181902b98db4f40d" kindref="member">addMethodMember</ref>(<ref refid="classjac_1_1ContextRef" kindref="compound">ContextRef</ref><sp/><ref refid="structjac_1_1ProtoBuilder_1_1Opaque_1af744421fc942a2fa181902b98db4f40d" kindref="member">ctx</ref>,<sp/><ref refid="classjac_1_1ObjectWrapper" kindref="compound">Object</ref><sp/><ref refid="structjac_1_1ProtoBuilder_1_1Opaque_1af744421fc942a2fa181902b98db4f40d" kindref="member">proto</ref>,<sp/>std::string<sp/><ref refid="structjac_1_1ProtoBuilder_1_1Opaque_1af744421fc942a2fa181902b98db4f40d" kindref="member">name</ref>,<sp/>PropFlags<sp/><ref refid="structjac_1_1ProtoBuilder_1_1Opaque_1af744421fc942a2fa181902b98db4f40d" kindref="member">flags</ref><sp/>=<sp/>PropFlags::Default)<sp/>{</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="structjac_1_1ProtoBuilder_1_1Opaque_1af744421fc942a2fa181902b98db4f40d" kindref="member">MethodRaw</ref><sp/>=<sp/><ref refid="structjac_1_1ProtoBuilder_1_1Opaque_1af744421fc942a2fa181902b98db4f40d" kindref="member">JSValue</ref>(*)(<ref refid="structjac_1_1ProtoBuilder_1_1Opaque_1af744421fc942a2fa181902b98db4f40d" kindref="member">JSContext</ref>*<sp/><ref refid="structjac_1_1ProtoBuilder_1_1Opaque_1af744421fc942a2fa181902b98db4f40d" kindref="member">ctx</ref>,<sp/><ref refid="structjac_1_1ProtoBuilder_1_1Opaque_1af744421fc942a2fa181902b98db4f40d" kindref="member">JSValueConst</ref><sp/><ref refid="structjac_1_1ProtoBuilder_1_1Opaque_1af744421fc942a2fa181902b98db4f40d" kindref="member">thisVal</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structjac_1_1ProtoBuilder_1_1Opaque_1af744421fc942a2fa181902b98db4f40d" kindref="member">argc</ref>,<sp/><ref refid="structjac_1_1ProtoBuilder_1_1Opaque_1af744421fc942a2fa181902b98db4f40d" kindref="member">JSValueConst</ref><sp/>*<ref refid="structjac_1_1ProtoBuilder_1_1Opaque_1af744421fc942a2fa181902b98db4f40d" kindref="member">argv</ref>);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structjac_1_1SgnUnwrap" kindref="compound">SgnUnwrap</ref><sp/><ref refid="structjac_1_1ProtoBuilder_1_1Opaque_1af744421fc942a2fa181902b98db4f40d" kindref="member">Unwrap_</ref>(<ref refid="structjac_1_1ProtoBuilder_1_1Opaque_1af744421fc942a2fa181902b98db4f40d" kindref="member">member</ref>);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[&amp;]&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structjac_1_1ProtoBuilder_1_1Opaque_1af744421fc942a2fa181902b98db4f40d" kindref="member">Res</ref>,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/><ref refid="structjac_1_1ProtoBuilder_1_1Opaque_1af744421fc942a2fa181902b98db4f40d" kindref="member">Args</ref>&gt;(<ref refid="structjac_1_1SgnUnwrap" kindref="compound">SgnUnwrap</ref>&lt;<ref refid="structjac_1_1ProtoBuilder_1_1Opaque_1af744421fc942a2fa181902b98db4f40d" kindref="member">Res</ref>(<ref refid="structjac_1_1ProtoBuilder_1_1Opaque_1af744421fc942a2fa181902b98db4f40d" kindref="member">Args</ref>...)&gt;)<sp/>{</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structjac_1_1ProtoBuilder_1_1Opaque_1af744421fc942a2fa181902b98db4f40d" kindref="member">MethodRaw</ref><sp/>func<sp/>=<sp/>[](<ref refid="structjac_1_1ProtoBuilder_1_1Opaque_1af744421fc942a2fa181902b98db4f40d" kindref="member">JSContext</ref>*<sp/><ref refid="structjac_1_1ProtoBuilder_1_1Opaque_1af744421fc942a2fa181902b98db4f40d" kindref="member">ctx_</ref>,<sp/><ref refid="structjac_1_1ProtoBuilder_1_1Opaque_1af744421fc942a2fa181902b98db4f40d" kindref="member">JSValueConst</ref><sp/><ref refid="structjac_1_1ProtoBuilder_1_1Opaque_1af744421fc942a2fa181902b98db4f40d" kindref="member">thisVal</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structjac_1_1ProtoBuilder_1_1Opaque_1af744421fc942a2fa181902b98db4f40d" kindref="member">argc</ref>,<sp/><ref refid="structjac_1_1ProtoBuilder_1_1Opaque_1af744421fc942a2fa181902b98db4f40d" kindref="member">JSValueConst</ref>*<sp/><ref refid="structjac_1_1ProtoBuilder_1_1Opaque_1af744421fc942a2fa181902b98db4f40d" kindref="member">argv</ref>)<sp/>-&gt;<sp/><ref refid="structjac_1_1ProtoBuilder_1_1Opaque_1af744421fc942a2fa181902b98db4f40d" kindref="member">JSValue</ref><sp/>{</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structjac_1_1ProtoBuilder_1_1Opaque_1af744421fc942a2fa181902b98db4f40d" kindref="member">T</ref>*<sp/><ref refid="structjac_1_1ProtoBuilder_1_1Opaque_1af744421fc942a2fa181902b98db4f40d" kindref="member">ptr</ref><sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="structjac_1_1ProtoBuilder_1_1Opaque_1af744421fc942a2fa181902b98db4f40d" kindref="member">T</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="structjac_1_1ProtoBuilder_1_1Opaque_1af744421fc942a2fa181902b98db4f40d" kindref="member">JS_GetOpaque</ref>(<ref refid="structjac_1_1ProtoBuilder_1_1Opaque_1af744421fc942a2fa181902b98db4f40d" kindref="member">thisVal</ref>,<sp/>classId));</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="structjac_1_1ProtoBuilder_1_1Opaque_1af744421fc942a2fa181902b98db4f40d" kindref="member">f</ref><sp/>=<sp/>[<ref refid="structjac_1_1ProtoBuilder_1_1Opaque_1af744421fc942a2fa181902b98db4f40d" kindref="member">ptr</ref>](<ref refid="structjac_1_1ProtoBuilder_1_1Opaque_1af744421fc942a2fa181902b98db4f40d" kindref="member">Args</ref>...<sp/><ref refid="structjac_1_1ProtoBuilder_1_1Opaque_1af744421fc942a2fa181902b98db4f40d" kindref="member">args</ref>)<sp/>-&gt;<sp/><ref refid="structjac_1_1ProtoBuilder_1_1Opaque_1af744421fc942a2fa181902b98db4f40d" kindref="member">Res</ref><sp/>{</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="structjac_1_1ProtoBuilder_1_1Opaque_1af744421fc942a2fa181902b98db4f40d" kindref="member">ptr</ref>-&gt;*<ref refid="structjac_1_1ProtoBuilder_1_1Opaque_1af744421fc942a2fa181902b98db4f40d" kindref="member">member</ref>)(<ref refid="structjac_1_1ProtoBuilder_1_1Opaque_1af744421fc942a2fa181902b98db4f40d" kindref="member">args</ref>...);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>propagateExceptions(<ref refid="structjac_1_1ProtoBuilder_1_1Opaque_1af744421fc942a2fa181902b98db4f40d" kindref="member">ctx_</ref>,<sp/>[&amp;]()<sp/>-&gt;<sp/><ref refid="structjac_1_1ProtoBuilder_1_1Opaque_1af744421fc942a2fa181902b98db4f40d" kindref="member">JSValue</ref><sp/>{</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>processCallRaw&lt;</highlight><highlight class="keyword">decltype</highlight><highlight class="normal">(<ref refid="structjac_1_1ProtoBuilder_1_1Opaque_1af744421fc942a2fa181902b98db4f40d" kindref="member">f</ref>),<sp/><ref refid="structjac_1_1ProtoBuilder_1_1Opaque_1af744421fc942a2fa181902b98db4f40d" kindref="member">Res</ref>,<sp/><ref refid="structjac_1_1ProtoBuilder_1_1Opaque_1af744421fc942a2fa181902b98db4f40d" kindref="member">Args</ref>...&gt;(<ref refid="structjac_1_1ProtoBuilder_1_1Opaque_1af744421fc942a2fa181902b98db4f40d" kindref="member">ctx_</ref>,<sp/><ref refid="structjac_1_1ProtoBuilder_1_1Opaque_1af744421fc942a2fa181902b98db4f40d" kindref="member">thisVal</ref>,<sp/><ref refid="structjac_1_1ProtoBuilder_1_1Opaque_1af744421fc942a2fa181902b98db4f40d" kindref="member">argc</ref>,<sp/><ref refid="structjac_1_1ProtoBuilder_1_1Opaque_1af744421fc942a2fa181902b98db4f40d" kindref="member">argv</ref>,<sp/><ref refid="structjac_1_1ProtoBuilder_1_1Opaque_1af744421fc942a2fa181902b98db4f40d" kindref="member">f</ref>);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structjac_1_1ProtoBuilder_1_1Opaque_1af744421fc942a2fa181902b98db4f40d" kindref="member">JSValue</ref><sp/><ref refid="structjac_1_1ProtoBuilder_1_1Opaque_1af744421fc942a2fa181902b98db4f40d" kindref="member">funcVal</ref><sp/>=<sp/><ref refid="structjac_1_1ProtoBuilder_1_1Opaque_1af744421fc942a2fa181902b98db4f40d" kindref="member">JS_NewCFunction</ref>(<ref refid="structjac_1_1ProtoBuilder_1_1Opaque_1af744421fc942a2fa181902b98db4f40d" kindref="member">ctx</ref>,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="structjac_1_1ProtoBuilder_1_1Opaque_1af744421fc942a2fa181902b98db4f40d" kindref="member">JSCFunction</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(func),<sp/><ref refid="structjac_1_1ProtoBuilder_1_1Opaque_1af744421fc942a2fa181902b98db4f40d" kindref="member">name</ref>.c_str(),<sp/>0);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classjac_1_1Atom" kindref="compound">Atom</ref><sp/><ref refid="structjac_1_1ProtoBuilder_1_1Opaque_1af744421fc942a2fa181902b98db4f40d" kindref="member">atom</ref><sp/>=<sp/><ref refid="classjac_1_1Atom" kindref="compound">Atom</ref>(<ref refid="structjac_1_1ProtoBuilder_1_1Opaque_1af744421fc942a2fa181902b98db4f40d" kindref="member">ctx</ref>,<sp/><ref refid="structjac_1_1ProtoBuilder_1_1Opaque_1af744421fc942a2fa181902b98db4f40d" kindref="member">JS_NewAtom</ref>(<ref refid="structjac_1_1ProtoBuilder_1_1Opaque_1af744421fc942a2fa181902b98db4f40d" kindref="member">ctx</ref>,<sp/><ref refid="structjac_1_1ProtoBuilder_1_1Opaque_1af744421fc942a2fa181902b98db4f40d" kindref="member">name</ref>.c_str()));</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structjac_1_1ProtoBuilder_1_1Opaque_1af744421fc942a2fa181902b98db4f40d" kindref="member">JS_DefinePropertyValue</ref>(<ref refid="structjac_1_1ProtoBuilder_1_1Opaque_1af744421fc942a2fa181902b98db4f40d" kindref="member">ctx</ref>,<sp/><ref refid="structjac_1_1ProtoBuilder_1_1Opaque_1af744421fc942a2fa181902b98db4f40d" kindref="member">proto</ref>.getVal(),<sp/><ref refid="structjac_1_1ProtoBuilder_1_1Opaque_1af744421fc942a2fa181902b98db4f40d" kindref="member">atom</ref>.get(),<sp/><ref refid="structjac_1_1ProtoBuilder_1_1Opaque_1af744421fc942a2fa181902b98db4f40d" kindref="member">funcVal</ref>,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="structjac_1_1ProtoBuilder_1_1Opaque_1af744421fc942a2fa181902b98db4f40d" kindref="member">flags</ref>));</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}(<ref refid="structjac_1_1ProtoBuilder_1_1Opaque_1af744421fc942a2fa181902b98db4f40d" kindref="member">Unwrap_</ref>);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="225" refid="structjac_1_1ProtoBuilder_1_1LifetimeHandles" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structjac_1_1ProtoBuilder_1_1LifetimeHandles" kindref="compound">LifetimeHandles</ref><sp/>{</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>postConstruction(<ref refid="classjac_1_1ContextRef" kindref="compound">ContextRef</ref><sp/>ctx,<sp/><ref refid="classjac_1_1ObjectWrapper" kindref="compound">Object</ref><sp/>thisVal,<sp/>std::vector&lt;ValueWeak&gt;<sp/>args)<sp/>{</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>do<sp/>nothing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="238" refid="structjac_1_1ProtoBuilder_1_1Callable" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structjac_1_1ProtoBuilder_1_1Callable" kindref="compound">Callable</ref><sp/>{</highlight></codeline>
<codeline lineno="248" refid="structjac_1_1ProtoBuilder_1_1Callable_1a5865ea5916b28263ea922d50a6b70f26" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classjac_1_1ValueWrapper" kindref="compound">Value</ref><sp/><ref refid="structjac_1_1ProtoBuilder_1_1Callable_1a5865ea5916b28263ea922d50a6b70f26" kindref="member">callFunction</ref>(<ref refid="classjac_1_1ContextRef" kindref="compound">ContextRef</ref><sp/></highlight><highlight class="comment">/*ctx*/</highlight><highlight class="normal">,<sp/><ref refid="classjac_1_1ValueWrapper" kindref="compound">ValueWeak</ref><sp/></highlight><highlight class="comment">/*funcObj*/</highlight><highlight class="normal">,<sp/><ref refid="classjac_1_1ValueWrapper" kindref="compound">ValueWeak</ref><sp/></highlight><highlight class="comment">/*thisVal*/</highlight><highlight class="normal">,<sp/>std::vector&lt;ValueWeak&gt;<sp/></highlight><highlight class="comment">/*args*/</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classjac_1_1ExceptionWrapper_1a89451ac6500984a18ce527a5c39b0c21" kindref="member">Exception::create</ref>(Exception::Type::TypeError,<sp/></highlight><highlight class="stringliteral">&quot;Class<sp/>cannot<sp/>be<sp/>called<sp/>as<sp/>a<sp/>function&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="261" refid="structjac_1_1ProtoBuilder_1_1Callable_1a67e45db3a23098adb43926fe53ce057d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classjac_1_1ValueWrapper" kindref="compound">Value</ref><sp/><ref refid="structjac_1_1ProtoBuilder_1_1Callable_1a67e45db3a23098adb43926fe53ce057d" kindref="member">callConstructor</ref>(<ref refid="classjac_1_1ContextRef" kindref="compound">ContextRef</ref><sp/></highlight><highlight class="comment">/*ctx*/</highlight><highlight class="normal">,<sp/><ref refid="classjac_1_1ValueWrapper" kindref="compound">ValueWeak</ref><sp/></highlight><highlight class="comment">/*funcObj*/</highlight><highlight class="normal">,<sp/><ref refid="classjac_1_1ValueWrapper" kindref="compound">ValueWeak</ref><sp/></highlight><highlight class="comment">/*target*/</highlight><highlight class="normal">,<sp/>std::vector&lt;ValueWeak&gt;<sp/></highlight><highlight class="comment">/*args*/</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classjac_1_1ExceptionWrapper_1a89451ac6500984a18ce527a5c39b0c21" kindref="member">Exception::create</ref>(Exception::Type::TypeError,<sp/></highlight><highlight class="stringliteral">&quot;Class<sp/>cannot<sp/>be<sp/>called<sp/>as<sp/>a<sp/>constructor&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="272" refid="structjac_1_1ProtoBuilder_1_1Properties" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structjac_1_1ProtoBuilder_1_1Properties" kindref="compound">Properties</ref><sp/>{</highlight></codeline>
<codeline lineno="280" refid="structjac_1_1ProtoBuilder_1_1Properties_1af6b9ceb88c47f5a29e6e51cee148c01e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structjac_1_1ProtoBuilder_1_1Properties_1af6b9ceb88c47f5a29e6e51cee148c01e" kindref="member">addProperties</ref>(<ref refid="classjac_1_1ContextRef" kindref="compound">ContextRef</ref><sp/>ctx,<sp/><ref refid="classjac_1_1ObjectWrapper" kindref="compound">Object</ref><sp/>proto)<sp/>{}</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="282"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>ProtoBuilder</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Builder&gt;</highlight></codeline>
<codeline lineno="286" refid="classjac_1_1Class" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classjac_1_1Class" kindref="compound">Class</ref><sp/>{</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>JSClassID<sp/>classId;</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>JSClassDef<sp/>classDef;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::string<sp/>className;</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isConstructor;</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>JSValue<sp/>constructor_impl(JSContext*<sp/>ctx,<sp/>JSValueConst<sp/>thisVal,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/>JSValueConst<sp/>*argv)<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>propagateExceptions(ctx,<sp/>[&amp;]()<sp/>-&gt;<sp/>JSValue<sp/>{</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classjac_1_1ValueWrapper" kindref="compound">Value</ref><sp/>proto<sp/>=<sp/><ref refid="classjac_1_1ValueWrapper_1a1665fd5d163b10a96bcc81a703803f08" kindref="member">Value::undefined</ref>(ctx);</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(JS_IsUndefined(thisVal))<sp/>{</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>proto<sp/>=<sp/><ref refid="classjac_1_1ValueWrapper" kindref="compound">Value</ref>(ctx,<sp/>JS_GetClassProto(ctx,<sp/>classId));</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>proto<sp/>=<sp/><ref refid="classjac_1_1ValueWrapper" kindref="compound">Value</ref>(ctx,<sp/>JS_GetPropertyStr(ctx,<sp/>thisVal,<sp/></highlight><highlight class="stringliteral">&quot;prototype&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classjac_1_1ObjectWrapper" kindref="compound">Object</ref><sp/>obj(ctx,<sp/>JS_NewObjectProtoClass(ctx,<sp/>proto.<ref refid="classjac_1_1ValueWrapper_1af97d3917b332574cd154dec7bab4aabc" kindref="member">getVal</ref>(),<sp/>classId));</highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>(std::is_base_of_v&lt;ProtoBuilder::Callable,<sp/>Builder&gt;)<sp/>{</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>JS_SetConstructorBit(ctx,<sp/>obj.<ref refid="classjac_1_1ValueWrapper_1af97d3917b332574cd154dec7bab4aabc" kindref="member">getVal</ref>(),<sp/>isConstructor);</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isPbOpaque<sp/>=<sp/>is_base_of_template_v&lt;ProtoBuilder::Opaque,<sp/>Builder&gt;;</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isPbConstructor<sp/>=<sp/>std::is_base_of_v&lt;ProtoBuilder::LifetimeHandles,<sp/>Builder&gt;;</highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>(isPbOpaque<sp/>||<sp/>isPbConstructor)<sp/>{</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;ValueWeak&gt;<sp/>args;</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>argc;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>args.emplace_back(ctx,<sp/>argv[i]);</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>(isPbOpaque)<sp/>{</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>instance<sp/>=<sp/>Builder::constructOpaque(ctx,<sp/>args);</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>JS_SetOpaque(obj.<ref refid="classjac_1_1ValueWrapper_1af97d3917b332574cd154dec7bab4aabc" kindref="member">getVal</ref>(),<sp/>instance);</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>(isPbConstructor)<sp/>{</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Builder::postConstruction(ctx,<sp/>obj,<sp/>args);</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>obj.<ref refid="classjac_1_1ValueWrapper_1ae0b6d4f2028601bfaa53a0c12956fe21" kindref="member">loot</ref>().second;</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="339" refid="classjac_1_1Class_1ab08cafccd9d4573e294e2c87d3aacaab" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classjac_1_1Class_1ab08cafccd9d4573e294e2c87d3aacaab" kindref="member">init</ref>(std::string<sp/>name,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isCtor<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(classId<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(className<sp/>!=<sp/>name<sp/>||<sp/>isConstructor<sp/>!=<sp/>isCtor)<sp/>{</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Class<sp/>already<sp/>initialized<sp/>with<sp/>different<sp/>name<sp/>or<sp/>constructor<sp/>flag&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>JS_NewClassID(&amp;classId);</highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>className<sp/>=<sp/>name;</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>isConstructor<sp/>=<sp/>isCtor;</highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>JSClassFinalizer*<sp/>finalizer<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>JSClassCall*<sp/>call<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>(is_base_of_template_v&lt;ProtoBuilder::Opaque,<sp/>Builder&gt;)<sp/>{</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Builder::classId<sp/>=<sp/>classId;</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>finalizer<sp/>=<sp/>[](JSRuntime*<sp/>rt,<sp/>JSValue<sp/>val)<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_assert</highlight><highlight class="normal">(</highlight><highlight class="keyword">noexcept</highlight><highlight class="normal">(Builder::destroyOpaque(rt,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">typename<sp/>Builder::OpaqueType*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">))));</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Builder::destroyOpaque(rt,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">typename<sp/>Builder::OpaqueType*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(JS_GetOpaque(val,<sp/>classId)));</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>(std::is_base_of_v&lt;ProtoBuilder::Callable,<sp/>Builder&gt;)<sp/>{</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>call<sp/>=<sp/>[](JSContext*<sp/>ctx,<sp/>JSValueConst<sp/>funcObj,<sp/>JSValueConst<sp/>thisVal,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/>JSValueConst*<sp/>argv,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>flags)<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal"><sp/>-&gt;<sp/>JSValue<sp/>{</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;ValueWeak&gt;<sp/>args;</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>args.reserve(argc);</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>argc;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>args.emplace_back(ctx,<sp/>argv[i]);</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>propagateExceptions(ctx,<sp/>[&amp;]()<sp/>-&gt;<sp/>JSValue<sp/>{</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(flags<sp/>&amp;<sp/>JS_CALL_FLAG_CONSTRUCTOR)<sp/>{</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Builder::callConstructor(ctx,<sp/><ref refid="classjac_1_1ValueWrapper" kindref="compound">ValueWeak</ref>(ctx,<sp/>funcObj),<sp/><ref refid="classjac_1_1ValueWrapper" kindref="compound">ValueWeak</ref>(ctx,<sp/>thisVal),<sp/>args).loot().second;</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Builder::callFunction(ctx,<sp/><ref refid="classjac_1_1ValueWrapper" kindref="compound">ValueWeak</ref>(ctx,<sp/>funcObj),<sp/><ref refid="classjac_1_1ValueWrapper" kindref="compound">ValueWeak</ref>(ctx,<sp/>thisVal),<sp/>args).loot().second;</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>JS_UNDEFINED;</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>classDef<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.class_name<sp/>=<sp/>className.c_str(),</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.finalizer<sp/>=<sp/>finalizer,</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.gc_mark<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.call<sp/>=<sp/>call,</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.exotic<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight></codeline>
<codeline lineno="397" refid="classjac_1_1Class_1adac6d64b4203b5b4e78667ed7556000d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classjac_1_1Class_1adac6d64b4203b5b4e78667ed7556000d" kindref="member">initContext</ref>(<ref refid="classjac_1_1ContextRef" kindref="compound">ContextRef</ref><sp/>ctx)<sp/>{</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>JSRuntime*<sp/>rt<sp/>=<sp/>JS_GetRuntime(ctx);</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!JS_IsRegisteredClass(rt,<sp/>classId))<sp/>{</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>JS_NewClass(rt,<sp/>classId,<sp/>&amp;classDef);</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>proto<sp/>=<sp/><ref refid="classjac_1_1ObjectWrapper_1a6b087bcf4b16ae3809224623f3ff6e90" kindref="member">Object::create</ref>(ctx);</highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>(std::is_base_of_v&lt;ProtoBuilder::Properties,<sp/>Builder&gt;)<sp/>{</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Builder::addProperties(ctx,<sp/>proto);</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classjac_1_1FunctionWrapper" kindref="compound">Function</ref><sp/>ctor(ctx,<sp/>JS_NewCFunction2(ctx,<sp/>constructor_impl,<sp/>className.c_str(),<sp/>0,<sp/>JS_CFUNC_constructor,<sp/>0));</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>JS_SetConstructor(ctx,<sp/>ctor.<ref refid="classjac_1_1ValueWrapper_1af97d3917b332574cd154dec7bab4aabc" kindref="member">getVal</ref>(),<sp/>proto.getVal());</highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>JS_SetClassProto(ctx,<sp/>classId,<sp/>proto.loot().second);</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight></codeline>
<codeline lineno="420" refid="classjac_1_1Class_1ad0c36a5256e61f87ba9d8364ded906e7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>JSClassID<sp/><ref refid="classjac_1_1Class_1ad0c36a5256e61f87ba9d8364ded906e7" kindref="member">getClassId</ref>()<sp/>{</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>classId;</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight></codeline>
<codeline lineno="431" refid="classjac_1_1Class_1a0d16ecd79c6df7af0c96d65b0250b712" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classjac_1_1ObjectWrapper" kindref="compound">Object</ref><sp/><ref refid="classjac_1_1Class_1a0d16ecd79c6df7af0c96d65b0250b712" kindref="member">getProto</ref>(<ref refid="classjac_1_1ContextRef" kindref="compound">ContextRef</ref><sp/>ctx)<sp/>{</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>JSRuntime*<sp/>rt<sp/>=<sp/>JS_GetRuntime(ctx);</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!JS_IsRegisteredClass(rt,<sp/>classId))<sp/>{</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>JS_NewClass(rt,<sp/>classId,<sp/>&amp;classDef);</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classjac_1_1ValueWrapper" kindref="compound">Value</ref><sp/>proto<sp/>=<sp/><ref refid="classjac_1_1ValueWrapper" kindref="compound">Value</ref>(ctx,<sp/>JS_GetClassProto(ctx,<sp/>classId));</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!JS_IsObject(proto.<ref refid="classjac_1_1ValueWrapper_1af97d3917b332574cd154dec7bab4aabc" kindref="member">getVal</ref>()))<sp/>{</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classjac_1_1Class_1adac6d64b4203b5b4e78667ed7556000d" kindref="member">initContext</ref>(ctx);</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>proto<sp/>=<sp/><ref refid="classjac_1_1ValueWrapper" kindref="compound">Value</ref>(ctx,<sp/>JS_GetClassProto(ctx,<sp/>classId));</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>proto.<ref refid="classjac_1_1ValueWrapper_1a369f6e6a3f811ded8496196749a647b6" kindref="member">to</ref>&lt;<ref refid="classjac_1_1ObjectWrapper" kindref="compound">Object</ref>&gt;();</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight></codeline>
<codeline lineno="451" refid="classjac_1_1Class_1a64c3f2c37b3a77e0ec3dfb11784ad647" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classjac_1_1FunctionWrapper" kindref="compound">Function</ref><sp/><ref refid="classjac_1_1Class_1a64c3f2c37b3a77e0ec3dfb11784ad647" kindref="member">getConstructor</ref>(<ref refid="classjac_1_1ContextRef" kindref="compound">ContextRef</ref><sp/>ctx)<sp/>{</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classjac_1_1ObjectWrapper" kindref="compound">Object</ref><sp/>proto<sp/>=<sp/><ref refid="classjac_1_1Class_1a0d16ecd79c6df7af0c96d65b0250b712" kindref="member">getProto</ref>(ctx);</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>proto.<ref refid="classjac_1_1ObjectWrapper_1a508714a413b326ac91d1cd00f1e66ed4" kindref="member">get</ref>(</highlight><highlight class="stringliteral">&quot;constructor&quot;</highlight><highlight class="normal">).to&lt;<ref refid="classjac_1_1FunctionWrapper" kindref="compound">Function</ref>&gt;();</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="455"><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Bdr<sp/>=<sp/>Builder&gt;</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::enable_if_t&lt;is_base_of_template_v&lt;ProtoBuilder::Opaque,<sp/>Bdr&gt;</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>std::is_base_of_v&lt;typename<sp/>Bdr::OpaqueType,<sp/>T&gt;</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>std::is_same_v&lt;Bdr,<sp/>Builder&gt;,<sp/><ref refid="classjac_1_1ValueWrapper" kindref="compound">Value</ref>&gt;</highlight></codeline>
<codeline lineno="468" refid="classjac_1_1Class_1a904c522c9151e1b8afffb6b57304cd91" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classjac_1_1Class_1a904c522c9151e1b8afffb6b57304cd91" kindref="member">createInstance</ref>(<ref refid="classjac_1_1ContextRef" kindref="compound">ContextRef</ref><sp/>ctx,<sp/>T*<sp/>instance)<sp/>{</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classjac_1_1ValueWrapper" kindref="compound">Value</ref><sp/>proto<sp/>=<sp/><ref refid="classjac_1_1Class_1a0d16ecd79c6df7af0c96d65b0250b712" kindref="member">getProto</ref>(ctx);</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classjac_1_1ValueWrapper" kindref="compound">Value</ref><sp/>obj(ctx,<sp/>JS_NewObjectProtoClass(ctx,<sp/>proto.<ref refid="classjac_1_1ValueWrapper_1af97d3917b332574cd154dec7bab4aabc" kindref="member">getVal</ref>(),<sp/>classId));</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>JS_SetOpaque(obj.<ref refid="classjac_1_1ValueWrapper_1af97d3917b332574cd154dec7bab4aabc" kindref="member">getVal</ref>(),<sp/>instance);</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>JS_SetConstructorBit(ctx,<sp/>obj.<ref refid="classjac_1_1ValueWrapper_1af97d3917b332574cd154dec7bab4aabc" kindref="member">getVal</ref>(),<sp/>isConstructor);</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>obj;</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="475"><highlight class="normal">};</highlight></codeline>
<codeline lineno="476"><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>jac</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="src/jac/machine/class.h"/>
  </compounddef>
</doxygen>
