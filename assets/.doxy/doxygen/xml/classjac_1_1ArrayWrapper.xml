<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classjac_1_1ArrayWrapper" kind="class" language="C++" prot="public">
    <compoundname>jac::ArrayWrapper</compoundname>
    <basecompoundref refid="classjac_1_1ObjectWrapper" prot="public" virt="non-virtual">jac::ObjectWrapper&lt; managed &gt;</basecompoundref>
    <includes refid="values_8h" local="no">values.h</includes>
    <templateparamlist>
      <param>
        <type>bool</type>
        <declname>managed</declname>
        <defname>managed</defname>
      </param>
    </templateparamlist>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classjac_1_1ArrayWrapper_1af2dac912e256c8e2dc91eb8d2a195034" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>jac::ArrayWrapper&lt; managed &gt;::ArrayWrapper</definition>
        <argsstring>(ObjectWrapper&lt; managed &gt; value)</argsstring>
        <name>ArrayWrapper</name>
        <qualifiedname>jac::ArrayWrapper::ArrayWrapper</qualifiedname>
        <param>
          <type><ref refid="classjac_1_1ObjectWrapper" kindref="compound">ObjectWrapper</ref>&lt; managed &gt;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Wrap an existing JSValue. If managed is true, JSValue will be freed when the Array is destroyed. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>Used internally when directly working with QuickJS API. New Array should be created using <ref refid="classjac_1_1ArrayWrapper_1a1ebbce86b94282080e4ec1f2e24715bd" kindref="member">Array::create()</ref>.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>context to work in </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>JSValue to wrap </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/jac/machine/values.h" line="646" column="5" bodyfile="src/jac/machine/values.h" bodystart="646" bodyend="650"/>
      </memberdef>
      <memberdef kind="function" id="classjac_1_1ArrayWrapper_1a63167c686b3f4e27c06d92e7f31838fc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>jac::ArrayWrapper&lt; managed &gt;::ArrayWrapper</definition>
        <argsstring>(ContextRef ctx, JSValue val)</argsstring>
        <name>ArrayWrapper</name>
        <qualifiedname>jac::ArrayWrapper::ArrayWrapper</qualifiedname>
        <param>
          <type><ref refid="classjac_1_1ContextRef" kindref="compound">ContextRef</ref></type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>JSValue</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/jac/machine/values.h" line="651" column="5" bodyfile="src/jac/machine/values.h" bodystart="651" bodyend="651"/>
      </memberdef>
      <memberdef kind="function" id="classjac_1_1ArrayWrapper_1aded9d5be4c6be89cc189bb35ea6eb8e1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int jac::ArrayWrapper&lt; managed &gt;::length</definition>
        <argsstring>()</argsstring>
        <name>length</name>
        <qualifiedname>jac::ArrayWrapper::length</qualifiedname>
        <briefdescription>
<para>Get the length of the array. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The length </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/jac/machine/values.h" line="658" column="9" bodyfile="src/jac/machine/values.h" bodystart="658" bodyend="660"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classjac_1_1ArrayWrapper_1a1ebbce86b94282080e4ec1f2e24715bd" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classjac_1_1ArrayWrapper" kindref="compound">Array</ref></type>
        <definition>static Array jac::ArrayWrapper&lt; managed &gt;::create</definition>
        <argsstring>(ContextRef ctx)</argsstring>
        <name>create</name>
        <qualifiedname>jac::ArrayWrapper::create</qualifiedname>
        <param>
          <type><ref refid="classjac_1_1ContextRef" kindref="compound">ContextRef</ref></type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
<para>Create a new Array object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>context to work in </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The new Array object </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/jac/machine/values.h" line="668" column="18" bodyfile="src/jac/machine/values.h" bodystart="668" bodyend="670"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>A wrapper for JSValue with Array type with RAII. </para>
    </briefdescription>
    <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>managed</parametername>
</parameternamelist>
<parameterdescription>
<para>whether the JSValue should be freed when the wrapper is destroyed. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>jac::ArrayWrapper&lt; managed &gt;</label>
        <link refid="classjac_1_1ArrayWrapper"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>jac::ObjectWrapper&lt; managed &gt;</label>
        <link refid="classjac_1_1ObjectWrapper"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>jac::ValueWrapper&lt; managed &gt;</label>
        <link refid="classjac_1_1ValueWrapper"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>jac::ArrayWrapper&lt; managed &gt;</label>
        <link refid="classjac_1_1ArrayWrapper"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>jac::ContextRef</label>
        <link refid="classjac_1_1ContextRef"/>
      </node>
      <node id="2">
        <label>jac::ObjectWrapper&lt; managed &gt;</label>
        <link refid="classjac_1_1ObjectWrapper"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>jac::ValueWrapper&lt; managed &gt;</label>
        <link refid="classjac_1_1ValueWrapper"/>
        <childnode refid="4" relation="usage">
          <edgelabel>_ctx</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="src/jac/machine/values.h" line="634" column="1" bodyfile="src/jac/machine/values.h" bodystart="634" bodyend="671"/>
    <listofallmembers>
      <member refid="classjac_1_1ValueWrapper_1abb202860c6e6398341e7dde74e60baa9" prot="protected" virt="non-virtual"><scope>jac::ArrayWrapper</scope><name>_ctx</name></member>
      <member refid="classjac_1_1ValueWrapper_1a66a74b7b7bc37155f184b4c30f0de510" prot="protected" virt="non-virtual"><scope>jac::ArrayWrapper</scope><name>_val</name></member>
      <member refid="classjac_1_1ArrayWrapper_1af2dac912e256c8e2dc91eb8d2a195034" prot="public" virt="non-virtual"><scope>jac::ArrayWrapper</scope><name>ArrayWrapper</name></member>
      <member refid="classjac_1_1ArrayWrapper_1a63167c686b3f4e27c06d92e7f31838fc" prot="public" virt="non-virtual"><scope>jac::ArrayWrapper</scope><name>ArrayWrapper</name></member>
      <member refid="classjac_1_1ArrayWrapper_1a1ebbce86b94282080e4ec1f2e24715bd" prot="public" virt="non-virtual"><scope>jac::ArrayWrapper</scope><name>create</name></member>
      <member refid="classjac_1_1ObjectWrapper_1a4c76a2ce0e8bc6ddaac61a2e9d82b949" prot="public" virt="non-virtual"><scope>jac::ArrayWrapper</scope><name>defineProperty</name></member>
      <member refid="classjac_1_1ObjectWrapper_1a5526e2afd9daba1b2dc064659d76389c" prot="public" virt="non-virtual"><scope>jac::ArrayWrapper</scope><name>deleteProperty</name></member>
      <member refid="classjac_1_1ValueWrapper_1a74104ed70008d14bdcebb3a872cdef27" prot="public" virt="non-virtual"><scope>jac::ArrayWrapper</scope><name>from</name></member>
      <member refid="classjac_1_1ValueWrapper_1a12a7c6efe316e6398e7db2f237d09a90" prot="public" virt="non-virtual"><scope>jac::ArrayWrapper</scope><name>fromJSON</name></member>
      <member refid="classjac_1_1ObjectWrapper_1a508714a413b326ac91d1cd00f1e66ed4" prot="public" virt="non-virtual"><scope>jac::ArrayWrapper</scope><name>get</name></member>
      <member refid="classjac_1_1ObjectWrapper_1a5a131c6672f32a5f9578e120280f4a77" prot="public" virt="non-virtual"><scope>jac::ArrayWrapper</scope><name>get</name></member>
      <member refid="classjac_1_1ObjectWrapper_1a329f3b89d150945afc6cd568e74142fe" prot="public" virt="non-virtual"><scope>jac::ArrayWrapper</scope><name>get</name></member>
      <member refid="classjac_1_1ObjectWrapper_1ac0bb89529ff7b51cadac3bf96650296e" prot="public" virt="non-virtual"><scope>jac::ArrayWrapper</scope><name>getPrototype</name></member>
      <member refid="classjac_1_1ValueWrapper_1af97d3917b332574cd154dec7bab4aabc" prot="public" virt="non-virtual"><scope>jac::ArrayWrapper</scope><name>getVal</name></member>
      <member refid="classjac_1_1ObjectWrapper_1abbc0d7dfd49ef9f2f7cd9edb71b56c7d" prot="public" virt="non-virtual"><scope>jac::ArrayWrapper</scope><name>hasProperty</name></member>
      <member refid="classjac_1_1ObjectWrapper_1ab51ad33e3efa2ec4ba4e0055385e8704" prot="public" virt="non-virtual"><scope>jac::ArrayWrapper</scope><name>invoke</name></member>
      <member refid="classjac_1_1ObjectWrapper_1ab27581d0014fd95535ea13bf4d2fcccb" prot="public" virt="non-virtual"><scope>jac::ArrayWrapper</scope><name>invoke</name></member>
      <member refid="classjac_1_1ObjectWrapper_1a5575b52851439a71b542b79c697bb8e3" prot="public" virt="non-virtual"><scope>jac::ArrayWrapper</scope><name>invoke</name></member>
      <member refid="classjac_1_1ValueWrapper_1a8c0a3d545bf634327e841091a4fb1fbd" prot="public" virt="non-virtual"><scope>jac::ArrayWrapper</scope><name>isArray</name></member>
      <member refid="classjac_1_1ValueWrapper_1a8a1e48e9296d4546aba6e340ba42169b" prot="public" virt="non-virtual"><scope>jac::ArrayWrapper</scope><name>isFunction</name></member>
      <member refid="classjac_1_1ValueWrapper_1a133d8273b68719adf3ee1acb7c080f18" prot="public" virt="non-virtual"><scope>jac::ArrayWrapper</scope><name>isNull</name></member>
      <member refid="classjac_1_1ValueWrapper_1accfe8acd04c14bdb69e75e5545c73a95" prot="public" virt="non-virtual"><scope>jac::ArrayWrapper</scope><name>isObject</name></member>
      <member refid="classjac_1_1ValueWrapper_1a3dd75b227b8fa526b397db701c233635" prot="public" virt="non-virtual"><scope>jac::ArrayWrapper</scope><name>isUndefined</name></member>
      <member refid="classjac_1_1ArrayWrapper_1aded9d5be4c6be89cc189bb35ea6eb8e1" prot="public" virt="non-virtual"><scope>jac::ArrayWrapper</scope><name>length</name></member>
      <member refid="classjac_1_1ValueWrapper_1ae0b6d4f2028601bfaa53a0c12956fe21" prot="public" virt="non-virtual"><scope>jac::ArrayWrapper</scope><name>loot</name></member>
      <member refid="classjac_1_1ValueWrapper_1abf597fa3ddb38b10a0b649717f46e77b" prot="public" virt="non-virtual"><scope>jac::ArrayWrapper</scope><name>null</name></member>
      <member refid="classjac_1_1ObjectWrapper_1a70bc1725583ea405d82a9aabd1649f33" prot="public" virt="non-virtual"><scope>jac::ArrayWrapper</scope><name>ObjectWrapper</name></member>
      <member refid="classjac_1_1ObjectWrapper_1a1e7fe64766d4cdd01ad9d948e12bb8cb" prot="public" virt="non-virtual"><scope>jac::ArrayWrapper</scope><name>ObjectWrapper</name></member>
      <member refid="classjac_1_1ValueWrapper_1a1487786919dca0744c5cc5a50ef5b5c5" prot="public" virt="non-virtual"><scope>jac::ArrayWrapper</scope><name>operator ValueWeak</name></member>
      <member refid="classjac_1_1ValueWrapper_1a8f29f7fc54b32aa65c42ab57c80edbd9" prot="public" virt="non-virtual"><scope>jac::ArrayWrapper</scope><name>operator=</name></member>
      <member refid="classjac_1_1ValueWrapper_1af6e64cb0e4faf7a7244da5a99090467f" prot="public" virt="non-virtual"><scope>jac::ArrayWrapper</scope><name>operator=</name></member>
      <member refid="classjac_1_1ObjectWrapper_1a4209b8b6c3411aa8bd56ad6b64535cfd" prot="public" virt="non-virtual"><scope>jac::ArrayWrapper</scope><name>set</name></member>
      <member refid="classjac_1_1ObjectWrapper_1a0c6fcd6d637ebf02d438a30fb6ccb21d" prot="public" virt="non-virtual"><scope>jac::ArrayWrapper</scope><name>set</name></member>
      <member refid="classjac_1_1ObjectWrapper_1af48e35ce52ed5ff567bac28e999318ae" prot="public" virt="non-virtual"><scope>jac::ArrayWrapper</scope><name>set</name></member>
      <member refid="classjac_1_1ObjectWrapper_1a453407b45b1cc138bcdc4526ed3d99e4" prot="public" virt="non-virtual"><scope>jac::ArrayWrapper</scope><name>setPrototype</name></member>
      <member refid="classjac_1_1ValueWrapper_1a65e5d08ce4065119e09dd7daf5515290" prot="public" virt="non-virtual"><scope>jac::ArrayWrapper</scope><name>stringify</name></member>
      <member refid="classjac_1_1ValueWrapper_1a369f6e6a3f811ded8496196749a647b6" prot="public" virt="non-virtual"><scope>jac::ArrayWrapper</scope><name>to</name></member>
      <member refid="classjac_1_1ValueWrapper_1ac2eb88c6dc4aaa0e162be6e76de99fd1" prot="public" virt="non-virtual"><scope>jac::ArrayWrapper</scope><name>toString</name></member>
      <member refid="classjac_1_1ValueWrapper_1a1665fd5d163b10a96bcc81a703803f08" prot="public" virt="non-virtual"><scope>jac::ArrayWrapper</scope><name>undefined</name></member>
      <member refid="classjac_1_1ValueWrapper_1a2e8591d7b97b3e3a0c30252bfb118eb6" prot="public" virt="non-virtual"><scope>jac::ArrayWrapper</scope><name>ValueWrapper</name></member>
      <member refid="classjac_1_1ValueWrapper_1afdf44e341bdfb6aa504ce08843eceb56" prot="public" virt="non-virtual"><scope>jac::ArrayWrapper</scope><name>ValueWrapper</name></member>
      <member refid="classjac_1_1ValueWrapper_1af97a125d921f216dcfc370c7a23c9575" prot="public" virt="non-virtual"><scope>jac::ArrayWrapper</scope><name>ValueWrapper</name></member>
      <member refid="classjac_1_1ValueWrapper_1abe9db711b8ec57ff73a0e0dd309ac3c4" prot="public" virt="non-virtual"><scope>jac::ArrayWrapper</scope><name>~ValueWrapper</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
