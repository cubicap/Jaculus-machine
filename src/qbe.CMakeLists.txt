cmake_minimum_required(VERSION 3.0)

project(QBE)

set(CMAKE_C_STANDARD 99)
set(CMAKE_C_EXTENSIONS OFF)

set(QBE_SOURCES_COMMON
    "main_subst.c"
    "abi.c"
    "alias.c"
    "emit.c"
    "cfg.c"
    "copy.c"
    "fold.c"
    "live.c"
    "load.c"
    "mem.c"
    "parse.c"
    "rega.c"
    "simpl.c"
    "spill.c"
    "ssa.c"
    "util.c"
)

set(QBE_AMD64_SOURCES "amd64/targ.c" "amd64/sysv.c" "amd64/isel.c" "amd64/emit.c")
set(QBE_ARM64_SOURCES "arm64/targ.c" "arm64/abi.c"  "arm64/isel.c" "arm64/emit.c")
set(QBE_RV64_SOURCES  "rv64/targ.c"  "rv64/abi.c"   "rv64/isel.c"  "rv64/emit.c")


set(QBE_PLATFORM "amd64_sysv" CACHE STRING "QBE target platform")
message(STATUS "QBE platform: ${QBE_PLATFORM}")


set(QBE_GENERATED_INCLUDES ${CMAKE_CURRENT_BINARY_DIR}/includes/qbe)
file(MAKE_DIRECTORY ${QBE_GENERATED_INCLUDES})
file(WRITE ${QBE_GENERATED_INCLUDES}/config.h "#define Deftgt T_${QBE_PLATFORM}")

file(WRITE ${CMAKE_CURRENT_SOURCE_DIR}/main_subst.c "\
#include \"all.h\"\n\
\
Target T;\
\
char debug['Z'+1] = {\
	['P'] = 0, /* parsing */\
	['M'] = 0, /* memory optimization */\
	['N'] = 0, /* ssa construction */\
	['C'] = 0, /* copy elimination */\
	['F'] = 0, /* constant folding */\
	['A'] = 0, /* abi lowering */\
	['I'] = 0, /* instruction selection */\
	['L'] = 0, /* liveness */\
	['S'] = 0, /* spilling */\
	['R'] = 0, /* reg. allocation */\
};\
")

add_library(qbe STATIC ${QBE_SOURCES_COMMON} ${QBE_AMD64_SOURCES} ${QBE_ARM64_SOURCES} ${QBE_RV64_SOURCES})
target_include_directories(qbe PRIVATE ${QBE_GENERATED_INCLUDES})


file(COPY ${CMAKE_CURRENT_SOURCE_DIR}/all.h DESTINATION ${QBE_GENERATED_INCLUDES}/qbe/)
file(COPY ${CMAKE_CURRENT_SOURCE_DIR}/ops.h DESTINATION ${QBE_GENERATED_INCLUDES}/)

target_include_directories(qbe PUBLIC
    $<BUILD_INTERFACE:${QBE_GENERATED_INCLUDES}>
    $<INSTALL_INTERFACE:qbe>
)
